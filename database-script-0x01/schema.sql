-- SQL queries to define the database schema

-- Create the 'ENUM' types explicitly due to unavailability of inline ENUM() in PostgreSQL
CREATE TYPE enum_user_role AS ENUM ('guest_user', 'host_user', 'admin_user');
CREATE TYPE enum_status AS ENUM (pending, confirmed, canceled);
CREATE TYPE enum_payment_method AS ENUM (credit_card, paypal, stripe);

CREATE TABLE Users (
       user_id INT GENERATED BY DEFAULT AS IDENTITY,
       PRIMARY KEY (user_id),
       first_name VARCHAR(50) NOT NULL,
       last_name VARCHAR(50) NOT NULL,
       email VARCHAR(50) NOT NULL,
       UNIQUE (email),
       password_hash TEXT NOT NULL,
       phone_number VARCHAR(50),
       user_role enum_user_role NOT NULL,
       created_at TIMESTAMP(3) DEFAULT now()
);

CREATE TABLE Property (
       property_id INT GENERATED BY DEFAULT AS IDENTITY,
       PRIMARY KEY (property_id),
       FOREIGN KEY (host_id) REFERENCES Users(user_id),
       property_name VARCHAR(50) NOT NULL,
       description VARCHAR(255) NOT NULL,
       location VARCHAR(50) NOT NULL,
       pricepernight DECIMAL(10, 3) NOT NULL,
       created_at TIMESTAMP(3) DEFAULT now(),
       updated_at TIMESTAMP(3) ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE Booking (
       booking_id INT GENERATED BY DEFAULT AS IDENTITY,
       PRIMARY KEY (booking_id),
       FOREIGN KEY (property_id) REFERENCES Property(property_id),
       FOREIGN KEY (user_id) REFERENCES Users(user_id),
       start_date DATE NOT NULL,
       end_date DATE NOT NULL,
       total_price DECIMAL(10, 3) NOT NULL,
       status enum_status NOT NULL,
       created_at TIMESTAMP(3) DEFAULT CURRENT_STAMP
);

CREATE TABLE Payment (
       payment_id INT GENERATED BY DEFAULT AS IDENTITY,
       PRIMARY KEY (payment_id),
       FOREIGN KEY (booking_id) REFERENCES Booking(booking_id),
       amount DECIMAL(10, 3) NOT NULL,
       payment_date TIMESTAMP(3) DEFAULT now(),
       payment_method enum_payment_method NOT NULL
);

CREATE TABLE Review (
       review_id INT GENERATED BY DEFAULT AS IDENTITY,
       PRIMARY KEY (review_id),
       FOREIGN KEY (property_id) REFERENCES Property(property_id),
       FOREIGN KEY (user_id) REFERENCES Users(user_id),
       rating INTEGER NOT NULL,
       CHECK (rating >= 1 AND rating <= 5),
       comment VARCHAR(255),
       created_at TIMESTAMP(3) DEFAULT now()
);

CREATE TABLE Message (
       message_id INT GENERATED BY DEFAULT AS IDENTITY,
       PRIMARY KEY (message_id),
       FOREIGN KEY (sender_id) REFERENCES Users(user_id),
       FOREIGN KEY (recipient_id) REFERENCES Users(user_id),
       message_body VARCHAR(255) NOT NULL,
       sent_at TIMESTAMP(3) DEFAULT now()
);

-- Indexing on the User, Property, Booking and Payment tables

CREATE INDEX idx_email
ON Users (email);

CREATE INDEX idx_property_id
ON Property (property_id);

CREATE INDEX idx_property_id
ON Booking (property_id);

CREATE INDEX idx_booking_id
ON Booking (booking_id);

CREATE INDEX idx_booking_id
ON Payment (booking_id);
